{
  "name": "payments-service",
  "version": "0.0.1",
  "description": "A payments service built with NestJS",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "typeorm-ts-node-commonjs",
    "migration:generate": "npm run typeorm -- migration:generate -d src/database/data-source.ts",
    "migration:create": "npm run typeorm -- migration:create",
    "migration:run": "npm run typeorm -- migration:run -d src/database/data-source.ts",
    "migration:revert": "npm run typeorm -- migration:revert -d src/database/data-source.ts",
    "schema:sync": "npm run typeorm -- schema:sync -d src/database/data-source.ts",
    "schema:drop": "npm run typeorm -- schema:drop -d src/database/data-source.ts",
    "docker:dev": "docker-compose -f docker-compose.dev.yml up -d",
    "docker:dev:build": "docker-compose -f docker-compose.dev.yml up -d --build",
    "docker:dev:down": "docker-compose -f docker-compose.dev.yml down",
    "docker:dev:logs": "docker-compose -f docker-compose.dev.yml logs -f",
    "docker:infrastructure": "docker-compose up -d",
    "docker:simple": "docker-compose -f docker-compose.simple.yml up -d",
    "docker:simple:down": "docker-compose -f docker-compose.simple.yml down",
    "docker:simple:logs": "docker-compose -f docker-compose.simple.yml logs -f",
    "docker:stop": "docker-compose down",
    "temporal:ui": "open http://localhost:8080",
    "temporal:logs": "docker logs temporal-server -f",
    "temporal:health": "docker exec temporal-server temporal workflow list --namespace default",
    "temporal:troubleshoot": "chmod +x scripts/troubleshoot-temporal.sh && ./scripts/troubleshoot-temporal.sh",
    "quick-start": "chmod +x scripts/quick-start.sh && ./scripts/quick-start.sh",
    "test:payment-flow": "chmod +x scripts/test-payment-flow.sh && ./scripts/test-payment-flow.sh"
  },
  "dependencies": {
    "@nestjs/common": "^11.1.6",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.6",
    "@nestjs/cqrs": "^11.0.3",
    "@nestjs/platform-fastify": "^11.1.6",
    "@nestjs/terminus": "^11.0.0",
    "@nestjs/typeorm": "^11.0.0",
    "@temporalio/activity": "^1.13.0",
    "@temporalio/client": "^1.13.0",
    "@temporalio/worker": "^1.13.0",
    "@temporalio/workflow": "^1.13.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "dotenv": "^17.2.2",
    "mercadopago": "^2.9.0",
    "nestjs-temporal-core": "^3.0.10",
    "pg": "^8.16.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "typeorm": "^0.3.27",
    "uuid": "^13.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^11.0.10",
    "@nestjs/schematics": "^11.0.7",
    "@nestjs/testing": "^11.1.6",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.5.2",
    "@types/pg": "^8.15.5",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^8.44.1",
    "@typescript-eslint/parser": "^8.44.1",
    "eslint": "^9.36.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "fastify": "^4.24.3",
    "jest": "^30.2.0",
    "prettier": "^3.6.2",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.4",
    "ts-loader": "^9.5.4",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.9.2"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "transformIgnorePatterns": [
      "node_modules/(?!(uuid)/)"
    ],
    "moduleNameMapper": {
      "^uuid$": "uuid"
    }
  }
}
